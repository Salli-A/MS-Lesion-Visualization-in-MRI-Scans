


# Needs to be done:


- Change camera view with coronal/axial (look into findBounds and setSLiceDirection on slice_interactor.py)
- Fix rotations of swi and phase (not orientated in the same way as t1 and flair)
-- Applying userTransformations changes slicing plane rotation as well (causing a mix up between axial, coronal, sagittal between modalities - seen by putting true on swi_phase_modality in renderPlaneVolume), possible fixes:
--- Seperate handling of t1/flair and swi/phase with seperate volume renders and slice interactor functions?
--- Apply rotation/ change axis before inserting into rendering pipeline?
-- Make sure that the modalities are registered since the SWI/phase had different orientation?
- Fix color and opacity transfer functions for modalities
-- Seperate transfer functions for each modality
-- Automatic based on histogram? Adjustable?
- Needs animation (technically the way the camera sync is done is an animation as it makes use of timers?)
- Add lesion segmentation
- Change step sice, not only slice thickness (seperate step size from setSliceThickness in slice_interactor.py)

Needs a way to change opacity/transfer function manually in the app - perhaps best to create a control panel and submission panel seperatly.
Control panel: 
    views (saggital, axial, coronal),
    modes: (volume slice, 2d slice, full volume),
    information on controls (shift+scroll = zoom, scroll = go though slices, etc.),
    transfer functions, 
    activate segmentations (automatic or premade masks?),
    

A automatic intitial opacity - based on histogram? (pehaps could be good to do on per slice basis?)


The swi / phase seem to not be 100% registered to align. The SWI/pahse have different coordinate systems/orientation and when rotated and sliced it does not seem to match 100%.
-Could be due to size mismatch + slicing? maybe possible to create a function to inflate swi/phase to match?


Bounds and Extent for each modality (x,y,z) = (x_min->x_ax, y_min->y_max, z_min->z_max)
Bounds - Spatial coords
Extent - Object pixels

T1 Bounds: (0.0, 255.0, 0.0, 255.0, 0.0, 175.0)
T1 Extent: (0, 255, 0, 255, 0, 175)

FLAIR Bounds: (0.0, 249.51171875, 0.0, 249.51171875, 0.0, 190.80000758171082)
FLAIR Extent: (0, 511, 0, 511, 0, 159)

SWI Bounds: (0.0, 209.16666167974472, 0.0, 239.16666096448898, 0.0, 142.5)
SWI Extent: (0, 251, 0, 287, 0, 95)

PHASE Bounds: (0.0, 209.16666167974472, 0.0, 239.16666096448898, 0.0, 142.5)
PHASE Extent: (0, 251, 0, 287, 0, 95)

When I rotate the SWI/phase this is the transform code:

    transform = vtk.vtkTransform()
    transform.Translate(center_x, center_y, center_z)
    transform.RotateZ(-90)
    transform.RotateY(90)
    transform.Translate(-center_x, -center_y, -center_z)
    volume.SetUserTransform(transform)

In theory it should be

    transform = vtk.vtkTransform()
    transform.Translate(-center_x, -center_y, -center_z)
    transform.RotateZ(-90)
    transform.RotateY(90)
    transform.Translate(center_x, -center_y, center_z)
    volume.SetUserTransform(transform)

Where it move the object to the global center, rotates and moves it back. But it doesn't work and this works - trying to figure out why. 






